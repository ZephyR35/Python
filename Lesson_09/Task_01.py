#Создать класс TrafficLight (светофор)
#Техническое задание:

#Хорошо подумайте какие из атрибутов являются атрибутами экземпляра, а какие класса.
#определить у него один атрибут color (цвет) - приватный. Это текущий цвет светофора.
#Определить метод state (состояние), возвращающий текущий цвет в виде строки.
#определить метод running (запуск)
#в рамках метода реализовать переключение светофора в режимы: красный, жёлтый, зелёный
#продолжительность первого состояния (красный) составляет 7 секунд, второго (жёлтый) — 2 секунды, третьего (зелёный) — на ваше усмотрение
#переключение между режимами должно осуществляться как у реального светофора: красный, жёлтый, зелёный, жёлтый, красный и т.д.
#метод меняет текущий цвет светофора и печатает его с помощью state.
#Предусмотреть разумное ограничение на количество итераций.
#Проверить работу примера, создав экземпляр и вызвав метод running.

# Тайминги передаются при создании экземпляра светофора в виде трех чисел.
# Внутри конструктора их надо соединить в единую структуру с цветами, так, чтобы было максимально понятно и лаконично.
# Ограничение на количество итераций в методе running убрать. Прерывание работы светофора реализовать через нажатие Crtl-C (или stop в IDE) в процессе выполнения.
# Найти какое исключение при этом возникает. Обработать его и завершить программу с выводом диагностического сообщения.



from time import sleep
print('Для запуска светофора используйте метод .running()'
      'Для остановки работы используйте Ctrl+C в консоли')
class TrafficLight:
    def __init__(self,time_red=7,time_yellow=2,time_green=5):
        self.__color = ['Red','Yellow','Green']
        self.current_color = ''
        self.time_red = time_red
        self.time_yellow = time_yellow
        self.time_green = time_green
    def state(self):
        if self.current_color == '':
            print('Светофор выключен')
        else:
            print(self.current_color)
    def running(self):
        i = 0
        try:
            while i >=0:
                if i == 0:
                    self.current_color = self.__color[i]
                    i+=1
                    self.state()
                    sleep(self.time_red)
                elif i == 1:
                    self.current_color = self.__color[i]
                    i+=1
                    self.state()
                    sleep(self.time_yellow)
                elif i == 2:
                    self.current_color = self.__color[i]
                    self.__color.reverse()
                    i = 1
                    self.state()
                    sleep(self.time_green)
        except KeyboardInterrupt:
            print('\tСветофор завершил работу')
        self.current_color = ''

t1 = TrafficLight(7,2,5)

